Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./BCM.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./BCM.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./BCM.o
LOAD ./DIO.o
LOAD ./SPI.o
LOAD ./UART.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xdc2
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_8
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./BCM.o
 .text          0x00000092        0x0 ./DIO.o
 .text          0x00000092        0x0 ./SPI.o
 .text          0x00000092        0x0 ./UART.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.BCM_Init
                0x00000092      0x144 ./BCM.o
                0x00000092                BCM_Init
 .text.BCM_DeInit
                0x000001d6       0x70 ./BCM.o
                0x000001d6                BCM_DeInit
 .text.BCM_RxDispatch
                0x00000246       0x10 ./BCM.o
                0x00000246                BCM_RxDispatch
 .text.BCM_TxDispatch
                0x00000256       0x10 ./BCM.o
                0x00000256                BCM_TxDispatch
 .text.BCM_Send
                0x00000266       0xca ./BCM.o
                0x00000266                BCM_Send
 .text.BCM_Receive
                0x00000330       0xd4 ./BCM.o
                0x00000330                BCM_Receive
 .text.DIO_init
                0x00000404       0xfc ./DIO.o
                0x00000404                DIO_init
 .text.DIO_Write
                0x00000500       0xee ./DIO.o
                0x00000500                DIO_Write
 .text.DIO_Read
                0x000005ee       0xcc ./DIO.o
                0x000005ee                DIO_Read
 .text.DIO_Toggle
                0x000006ba       0xb0 ./DIO.o
                0x000006ba                DIO_Toggle
 .text.__vector_12
                0x0000076a       0x66 ./SPI.o
                0x0000076a                __vector_12
 .text.SPI_init
                0x000007d0       0xde ./SPI.o
                0x000007d0                SPI_init
 .text.SPI_deInit
                0x000008ae       0x1a ./SPI.o
                0x000008ae                SPI_deInit
 .text.SPI_setCallBack
                0x000008c8       0x24 ./SPI.o
                0x000008c8                SPI_setCallBack
 .text.SPI_sendByte
                0x000008ec       0x30 ./SPI.o
                0x000008ec                SPI_sendByte
 .text.SPI_receiveByte
                0x0000091c       0x28 ./SPI.o
                0x0000091c                SPI_receiveByte
 .text.__vector_13
                0x00000944       0x66 ./UART.o
                0x00000944                __vector_13
 .text.__vector_14
                0x000009aa       0x66 ./UART.o
                0x000009aa                __vector_14
 .text.__vector_15
                0x00000a10       0x66 ./UART.o
                0x00000a10                __vector_15
 .text.UART_TXC_setCallBack
                0x00000a76       0x24 ./UART.o
                0x00000a76                UART_TXC_setCallBack
 .text.UART_RXC_setCallBack
                0x00000a9a       0x24 ./UART.o
                0x00000a9a                UART_RXC_setCallBack
 .text.UART_UDRE_setCallBack
                0x00000abe       0x24 ./UART.o
                0x00000abe                UART_UDRE_setCallBack
 .text.UART_init
                0x00000ae2      0x152 ./UART.o
                0x00000ae2                UART_init
 .text.UART_deInit
                0x00000c34       0x2a ./UART.o
                0x00000c34                UART_deInit
 .text.UART_transmit
                0x00000c5e       0x40 ./UART.o
                0x00000c5e                UART_transmit
 .text.UART_receive
                0x00000c9e       0x28 ./UART.o
                0x00000c9e                UART_receive
 .text.UART_Send_String
                0x00000cc6       0x5a ./UART.o
                0x00000cc6                UART_Send_String
 .text.UART_receiveString
                0x00000d20       0x86 ./UART.o
                0x00000d20                UART_receiveString
 .text.app      0x00000da6        0xe ./main.o
                0x00000da6                app
 .text.main     0x00000db4        0xa ./main.o
                0x00000db4                main
 .text.libgcc   0x00000dbe        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000dbe        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000dbe        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000dbe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000dbe        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000dbe                exit
                0x00000dbe                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000dbe        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000dc2                _etext = .

.data           0x00800060        0xa load address 0x00000dc2
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./BCM.o
 .data          0x00800060        0x0 ./DIO.o
 .data          0x00800060        0x0 ./SPI.o
 .data          0x00800060        0x0 ./UART.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.C.1.1364
                0x00800060        0x3 ./BCM.o
 .rodata.C.0.1363
                0x00800063        0x6 ./BCM.o
 *(.gnu.linkonce.d*)
                0x0080006a                . = ALIGN (0x2)
 *fill*         0x00800069        0x1 00
                0x0080006a                _edata = .
                0x0080006a                PROVIDE (__data_end, .)

.bss            0x0080006a        0xd
                0x0080006a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006a        0x0 ./BCM.o
 .bss           0x0080006a        0x0 ./DIO.o
 .bss           0x0080006a        0x0 ./SPI.o
 .bss           0x0080006a        0x0 ./UART.o
 .bss           0x0080006a        0x0 ./main.o
 .bss           0x0080006a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.au8_counter.1396
                0x0080006a        0x1 ./BCM.o
 .bss.au8_counter.1424
                0x0080006b        0x1 ./BCM.o
 .bss.gu8_BCM_UART_SM
                0x0080006c        0x1 ./BCM.o
 .bss.gu8_BCM_SPI_SM
                0x0080006d        0x1 ./BCM.o
 .bss.g_SPI_callBackPtr
                0x0080006e        0x2 ./SPI.o
 .bss.g_TXC_callBackPtr
                0x00800070        0x2 ./UART.o
 .bss.g_RXC_callBackPtr
                0x00800072        0x2 ./UART.o
 .bss.g_UDRE_callBackPtr
                0x00800074        0x2 ./UART.o
 .bss.flag      0x00800076        0x1 ./main.o
                0x00800076                flag
 *(COMMON)
                0x00800077                PROVIDE (__bss_end, .)
                0x00000dc2                __data_load_start = LOADADDR (.data)
                0x00000dcc                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800077        0x0
                0x00800077                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800077                PROVIDE (__noinit_end, .)
                0x00800077                _end = .
                0x00800077                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1ab8
 *(.stab)
 .stab          0x00000000      0x9fc ./BCM.o
 .stab          0x000009fc      0x5d0 ./DIO.o
                                0x774 (size before relaxing)
 .stab          0x00000fcc      0x360 ./SPI.o
                                0x600 (size before relaxing)
 .stab          0x0000132c      0x5f4 ./UART.o
                                0x8dc (size before relaxing)
 .stab          0x00001920      0x198 ./main.o
                                0x4e0 (size before relaxing)

.stabstr        0x00000000     0x15f2
 *(.stabstr)
 .stabstr       0x00000000     0x15f2 ./BCM.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(BCM_Receiver.elf elf32-avr)
LOAD linker stubs
