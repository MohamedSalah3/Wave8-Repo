Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              ./BCM.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./BCM.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./BCM.o
LOAD ./DIO.o
LOAD ./SPI.o
LOAD ./UART.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1126
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x0000008e                __vector_1
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_11
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_9
                0x0000008e                __vector_2
                0x0000008e                __vector_8
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092        0x0 ./BCM.o
 .text          0x00000092        0x0 ./DIO.o
 .text          0x00000092        0x0 ./SPI.o
 .text          0x00000092        0x0 ./UART.o
 .text          0x00000092        0x0 ./main.o
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000092        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000092                . = ALIGN (0x2)
 *(.text.*)
 .text.RxApp    0x00000092       0x2c ./BCM.o
                0x00000092                RxApp
 .text.TxApp    0x000000be       0x1e ./BCM.o
                0x000000be                TxApp
 .text.BCM_Init
                0x000000dc      0x138 ./BCM.o
                0x000000dc                BCM_Init
 .text.BCM_DeInit
                0x00000214       0x68 ./BCM.o
                0x00000214                BCM_DeInit
 .text.BCM_RxDispatch
                0x0000027c       0xb4 ./BCM.o
                0x0000027c                BCM_RxDispatch
 .text.BCM_TxDispatch
                0x00000330       0x8a ./BCM.o
                0x00000330                BCM_TxDispatch
 .text.BCM_Send
                0x000003ba      0x218 ./BCM.o
                0x000003ba                BCM_Send
 .text.BCM_SetupRxBuffer
                0x000005d2       0x8a ./BCM.o
                0x000005d2                BCM_SetupRxBuffer
 .text.BCM_Receive
                0x0000065c      0x11a ./BCM.o
                0x0000065c                BCM_Receive
 .text.DIO_init
                0x00000776       0xfc ./DIO.o
                0x00000776                DIO_init
 .text.DIO_Write
                0x00000872       0xee ./DIO.o
                0x00000872                DIO_Write
 .text.DIO_Read
                0x00000960       0xcc ./DIO.o
                0x00000960                DIO_Read
 .text.DIO_Toggle
                0x00000a2c       0xb0 ./DIO.o
                0x00000a2c                DIO_Toggle
 .text.__vector_12
                0x00000adc       0x66 ./SPI.o
                0x00000adc                __vector_12
 .text.SPI_init
                0x00000b42       0xde ./SPI.o
                0x00000b42                SPI_init
 .text.SPI_deInit
                0x00000c20       0x1a ./SPI.o
                0x00000c20                SPI_deInit
 .text.SPI_setCallBack
                0x00000c3a       0x24 ./SPI.o
                0x00000c3a                SPI_setCallBack
 .text.SPI_sendByte
                0x00000c5e       0x30 ./SPI.o
                0x00000c5e                SPI_sendByte
 .text.SPI_receiveByte
                0x00000c8e       0x28 ./SPI.o
                0x00000c8e                SPI_receiveByte
 .text.__vector_13
                0x00000cb6       0x66 ./UART.o
                0x00000cb6                __vector_13
 .text.__vector_14
                0x00000d1c       0x66 ./UART.o
                0x00000d1c                __vector_14
 .text.__vector_15
                0x00000d82       0x66 ./UART.o
                0x00000d82                __vector_15
 .text.UART_TXC_setCallBack
                0x00000de8       0x24 ./UART.o
                0x00000de8                UART_TXC_setCallBack
 .text.UART_RXC_setCallBack
                0x00000e0c       0x24 ./UART.o
                0x00000e0c                UART_RXC_setCallBack
 .text.UART_UDRE_setCallBack
                0x00000e30       0x24 ./UART.o
                0x00000e30                UART_UDRE_setCallBack
 .text.UART_init
                0x00000e54      0x152 ./UART.o
                0x00000e54                UART_init
 .text.UART_deInit
                0x00000fa6       0x2a ./UART.o
                0x00000fa6                UART_deInit
 .text.UART_transmit
                0x00000fd0       0x40 ./UART.o
                0x00000fd0                UART_transmit
 .text.UART_receive
                0x00001010       0x28 ./UART.o
                0x00001010                UART_receive
 .text.UART_Send_String
                0x00001038       0x5a ./UART.o
                0x00001038                UART_Send_String
 .text.UART_receiveString
                0x00001092       0x86 ./UART.o
                0x00001092                UART_receiveString
 .text.main     0x00001118        0xa ./main.o
                0x00001118                main
 .text.libgcc   0x00001122        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00001122        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001122        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00001122                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001122        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00001122                exit
                0x00001122                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001122        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00001126                _etext = .

.data           0x00800060        0xc load address 0x00001126
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./BCM.o
 .data          0x00800060        0x0 ./DIO.o
 .data          0x00800060        0x0 ./SPI.o
 .data          0x00800060        0x0 ./UART.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 .data.gu8_TxDispatchCounter
                0x00800060        0x1 ./BCM.o
 .data.gu8_RxDispatchCounter
                0x00800061        0x1 ./BCM.o
 *(.rodata)
 *(.rodata*)
 .rodata.C.5.1402
                0x00800062        0x3 ./BCM.o
 .rodata.C.4.1401
                0x00800065        0x6 ./BCM.o
 *(.gnu.linkonce.d*)
                0x0080006c                . = ALIGN (0x2)
 *fill*         0x0080006b        0x1 00
                0x0080006c                _edata = .
                0x0080006c                PROVIDE (__data_end, .)

.bss            0x0080006c       0x1c
                0x0080006c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0080006c        0x0 ./BCM.o
 .bss           0x0080006c        0x0 ./DIO.o
 .bss           0x0080006c        0x0 ./SPI.o
 .bss           0x0080006c        0x0 ./UART.o
 .bss           0x0080006c        0x0 ./main.o
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080006c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.gu8_BCM_SENDING_SM
                0x0080006c        0x1 ./BCM.o
 .bss.gu8_BCM_Receiving_SM
                0x0080006d        0x1 ./BCM.o
 .bss.gu8_BCM_BufferState
                0x0080006e        0x1 ./BCM.o
 .bss.gu8_TxCheckSum
                0x0080006f        0x1 ./BCM.o
 .bss.gu8_RxCheckSum
                0x00800070        0x1 ./BCM.o
 .bss.gu8_TxCounter
                0x00800071        0x1 ./BCM.o
 .bss.gu8_RxCounter
                0x00800072        0x1 ./BCM.o
 .bss.apf_SenderFunction.1490
                0x00800073        0x2 ./BCM.o
 .bss.au8_Ret.1583
                0x00800075        0x1 ./BCM.o
 .bss.TxCfg     0x00800076        0x5 ./BCM.o
 .bss.RxCfg     0x0080007b        0x5 ./BCM.o
 .bss.g_SPI_callBackPtr
                0x00800080        0x2 ./SPI.o
 .bss.g_TXC_callBackPtr
                0x00800082        0x2 ./UART.o
 .bss.g_RXC_callBackPtr
                0x00800084        0x2 ./UART.o
 .bss.g_UDRE_callBackPtr
                0x00800086        0x2 ./UART.o
 *(COMMON)
                0x00800088                PROVIDE (__bss_end, .)
                0x00001126                __data_load_start = LOADADDR (.data)
                0x00001132                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800088        0x0
                0x00800088                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800088                PROVIDE (__noinit_end, .)
                0x00800088                _end = .
                0x00800088                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1e18
 *(.stab)
 .stab          0x00000000      0xd80 ./BCM.o
 .stab          0x00000d80      0x5d0 ./DIO.o
                                0x774 (size before relaxing)
 .stab          0x00001350      0x360 ./SPI.o
                                0x600 (size before relaxing)
 .stab          0x000016b0      0x5f4 ./UART.o
                                0x8dc (size before relaxing)
 .stab          0x00001ca4      0x174 ./main.o
                                0x534 (size before relaxing)

.stabstr        0x00000000     0x183f
 *(.stabstr)
 .stabstr       0x00000000     0x183f ./BCM.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(BCM_Receiver.elf elf32-avr)
LOAD linker stubs
