/*
 * main.c
 *
 *  Created on: Mar 2, 2020
 *      Author: Youssef Harby & Mohamed Ramadan
 */


/*- INCLUDES -----------------------------------------------*/

#include "BCM.h"


/*- DEFINITIONS --------------------------------------------*/

#define OVERHEAD 		4
#define ELEMENTS(X)		(X + OVERHEAD)

#define BCM_DONE		1
#define BCM_NOT_DONE	0


volatile sint8_t SendingString[ELEMENTS(20)];

volatile uint8_t uart_counter = 0;

uint8_t uart_flag = 1;

void Uart_SendingApp(void)
{
	uart_flag = 1;
}

void Bcm_callback(void)
{

}

int main(void)
{
	uint8_t UART_status = BCM_NOT_DONE;
	UART_ConfigType UART_cfg = {
			UART_ASYNCHRONOUS_MODE,
			UART_SENDER_MODE,
			UART_INTERRUPT_ENABLED,
			UART_EIGHT_BITS,
			UART_PARITY_DISABLED,
			UART_ONE_STOP_BIT
	};

	strBcmConfig_t BCM_cfg = {
			BCM_SPI_ID,
			BCM_RECEIVE
	};

	strBcmSendConfig_t BCM_startCfg = {
			BCM_SPI_ID,
			(uint8_t*)SendingString,
			ELEMENTS(20)
	};


	BCM_Init(&BCM_cfg);

	UART_TXC_setCallBack(&Uart_SendingApp);

	UART_init(&UART_cfg);

	sei();

	BCM_SetupRxBuffer(BCM_SPI_ID, (uint8_t*)SendingString, ELEMENTS(20));

	while(1)
	{
//		if(uart_flag == 1)
//		{
//			UART_Send_String()
//			uart_flag = 0;
//		}
		if(uart_counter == ELEMENTS(20))
			UART_status = BCM_DONE;

		if(UART_status == BCM_NOT_DONE)
		{
			BCM_RxDispatch();
		}
	}
}



//uint8_t Buffer[ELEMENTS(21)];
//strBcmConfig_t cfg = {
//		BCM_SPI_ID,
//		BCM_RECEIVE
//};
//
//BCM_Init(&cfg);
//
//sei();
//
//BCM_SetupRxBuffer(BCM_SPI_ID, (uint8_t*)Buffer, sizeof(Buffer));
//
//while(1)
//{
//	BCM_RxDispatch();
//}
